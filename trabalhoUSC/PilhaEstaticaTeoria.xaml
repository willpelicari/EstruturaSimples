<Window x:Class="trabalhoUSC.PilhaEstaticaTeoria"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Pilha Estática - Teoria" Height="400" Width="525">
    <Grid>
        <Label Content="Trabalho - Engenharia de Software II" HorizontalAlignment="Left" Margin="143,10,0,0" VerticalAlignment="Top" Width="228"/>
        <Image HorizontalAlignment="Left" Height="217" VerticalAlignment="Top" Width="155" Margin="27,58,0,0" Source="/Images/can-stock-photo_csp9940131.jpg" RenderTransformOrigin="-0.837,0.391"/>
        <TextBox HorizontalAlignment="Left" Height="194" Margin="207,58,0,0" TextWrapping="Wrap" Text="Uma das estruturas de dados mais simples é a pilha. Possivelmente por essa razão, é a&#xD;&#xA;estrutura de dados mais utilizada em programação, sendo inclusive implementada&#xD;&#xA;diretamente pelo hardware da maioria das máquinas modernas. A idéia fundamental da&#xD;&#xA;pilha é que todo o acesso a seus elementos é feito através do seu topo. Assim, quando&#xD;&#xA;um elemento novo é introduzido na pilha, passa a ser o elemento do topo, e o único&#xD;&#xA;elemento que pode ser removido da pilha é o do topo. Isto faz com que os elementos da&#xD;&#xA;pilha sejam retirados na ordem inversa à ordem em que foram introduzidos: o primeiro&#xD;&#xA;que sai é o último que entrou (a sigla LIFO – last in, first out – é usada para descrever&#xD;&#xA;esta estratégia).&#xD;&#xA;Para entendermos o funcionamento de uma estrutura de pilha, podemos fazer uma&#xD;&#xA;analogia com uma pilha de pratos. Se quisermos adicionar um prato na pilha, o&#xD;&#xA;colocamos no topo. Para pegar um prato da pilha, retiramos o do topo. Assim, temos&#xD;&#xA;que retirar o prato do topo para ter acesso ao próximo prato. A estrutura de pilha&#xD;&#xA;funciona de maneira análoga. Cada novo elemento é inserido no topo e só temos acesso&#xD;&#xA;ao elemento do topo da pilha.&#xD;&#xA;Existem duas operações básicas que devem ser implementadas numa estrutura de pilha:&#xD;&#xA;a operação para empilhar um novo elemento, inserindo-o no topo, e a operação para&#xD;&#xA;desempilhar um elemento, removendo-o do topo. É comum nos referirmos a essas duas&#xD;&#xA;operações pelos termos em inglês push (empilhar) e pop (desempilhar). O exemplo de utilização de pilha mais próximo é a própria pilha de execução da&#xD;&#xA;linguagem C. As variáveis locais das funções são dispostas numa pilha e uma função só&#xD;&#xA;tem acesso às variáveis que estão no topo (não é possível acessar as variáveis da função&#xD;&#xA;locais às outras funções).&#xD;&#xA;Há várias implementações possíveis de uma pilha, que se distinguem pela natureza dos&#xD;&#xA;seus elementos, pela maneira como os elementos são armazenados e pelas operações&#xD;&#xA;disponíveis para o tratamento da pilha." VerticalAlignment="Top" Width="284" VerticalScrollBarVisibility="Visible" IsReadOnly="True"/>
        <Button x:Name="pilhaEstaticaExemplo" Content="Ver Exemplo" HorizontalAlignment="Left" Margin="350,270,0,0" VerticalAlignment="Top" Width="145" Height="29" Click="pilhaEstaticaButton_Click"/>
        <Button x:Name="BuscarReferencia" Content="Buscar Referência" HorizontalAlignment="Left" Margin="200,270,0,0" VerticalAlignment="Top" Width="145" Height="29"/>
        <Label Content="PILHA" HorizontalAlignment="Left" Margin="421,21,0,0" VerticalAlignment="Top" Width="70" FontSize="20" FontWeight="Bold"/>
        <Label Content="Referência:&#xA;Profs. Waldemar Celes e José Lucas Rangel&#xA;PUC Rio - Apostila de Estruturas de Dados p.10-1 - 2002" HorizontalAlignment="Left" Margin="4,299,0,0" VerticalAlignment="Top" Width="507"/>
    </Grid>
</Window>
