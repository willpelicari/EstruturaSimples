<Window x:Class="trabalhoUSC.ListaEstaticaTeoria"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Lista Estatica - Teoria" Height="400" Width="525">
    <Grid>
        <Label Content="Trabalho - Engenharia de Software II" HorizontalAlignment="Left" Margin="143,10,0,0" VerticalAlignment="Top" Width="228"/>
        <Image HorizontalAlignment="Left" Height="217" VerticalAlignment="Top" Width="155" Margin="27,58,0,0" Source="/Images/can-stock-photo_csp9940131.jpg" RenderTransformOrigin="-0.837,0.391"/>
        <TextBox HorizontalAlignment="Left" Height="194" Margin="207,58,0,0" TextWrapping="Wrap" Text="Numa lista encadeada, para cada novo elemento inserido na estrutura, alocamos um&#xD;&#xA;espaço de memória para armazená-lo. Desta forma, o espaço total de memória gasto&#xD;&#xA;pela estrutura é proporcional ao número de elementos nela armazenado. No entanto, não&#xD;&#xA;podemos garantir que os elementos armazenados na lista ocuparão um espaço de&#xD;&#xA;memória contíguo, portanto não temos acesso direto aos elementos da lista. Para que&#xD;&#xA;seja possível percorrer todos os elementos da lista, devemos explicitamente guardar o&#xD;&#xA;encadeamento dos elementos, o que é feito armazenando-se, junto com a informação de&#xD;&#xA;cada elemento, um ponteiro para o próximo elemento da lista. &#xD;&#xA;A estrutura consiste numa seqüência encadeada de elementos, em geral chamados de&#xD;&#xA;nós da lista. A lista é representada por um ponteiro para o primeiro elemento (ou nó).&#xD;&#xA;Do primeiro elemento, podemos alcançar o segundo seguindo o encadeamento, e assim&#xD;&#xA;por diante. O último elemento da lista aponta para NULL, sinalizando que não existe um&#xD;&#xA;próximo elemento.&#xD;&#xA;Devemos notar que trata-se de uma estrutura auto-referenciada, pois, além do campo&#xD;&#xA;que armazena a informação (no caso, um número inteiro), há um campo que é um&#xD;&#xA;ponteiro para uma próxima estrutura do mesmo tipo. Embora não seja essencial, é uma&#xD;&#xA;boa estratégia definirmos o tipo Lista como sinônimo de struct lista, conforme&#xD;&#xA;ilustrado acima. O tipo Lista representa um nó da lista e a estrutura de lista encadeada&#xD;&#xA;é representada pelo ponteiro para seu primeiro elemento (tipo Lista*).&#xD;&#xA;Considerando a definição de Lista, podemos definir as principais funções necessárias&#xD;&#xA;para implementarmos uma lista encadeada." VerticalAlignment="Top" Width="284" VerticalScrollBarVisibility="Visible" IsReadOnly="True"/>
        <Button x:Name="ListaEstaticaExemplo" Content="Ver Exemplo" HorizontalAlignment="Left" Margin="350,270,0,0" VerticalAlignment="Top" Width="145" Height="29" Click="ListaEstaticaExemplo_Click"/>
        <Button x:Name="BuscarReferencia" Content="Buscar Referência" HorizontalAlignment="Left" Margin="200,270,0,0" VerticalAlignment="Top" Width="145" Height="29" Click="BuscarReferencia_Click"/>
        <Label Content="LISTA" HorizontalAlignment="Left" Margin="421,21,0,0" VerticalAlignment="Top" Width="70" FontSize="20" FontWeight="Bold"/>
        <Label Content="Referência:&#xA;Profs. Waldemar Celes e José Lucas Rangel&#xD;&#xA;PUC Rio - Apostila de Estruturas de Dados p.10-1 - 2002" HorizontalAlignment="Left" Margin="4,299,0,0" VerticalAlignment="Top" Width="507"/>
    </Grid>
</Window>
